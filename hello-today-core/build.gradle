plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.lima'
version = '0.0.1-core'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Message Q
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.9.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Docker
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// Dev Test
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	// DB
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:2.3'

	// connect http
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.11.0'

	// Search
	implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.17.12'

}

tasks.named('test') {
	useJUnitPlatform()
}
